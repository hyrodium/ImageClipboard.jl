name: Test on WSL
on:
  push:
    branches:
      - main
    tags: '*'
  pull_request:
jobs:
  test:
    name: Julia ${{ matrix.version }} - WSL - ${{ github.event_name }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1'
          - 'lts'
          - 'nightly'
    steps:
      - uses: actions/checkout@v5
      - name: Setup WSL
        uses: Vampire/setup-wsl@v6
        with:
          distribution: Ubuntu-22.04
          additional-packages: wget curl tar gzip ca-certificates
      - name: Install Julia in WSL
        shell: wsl-bash {0}
        run: |
          JULIA_VERSION="${{ matrix.version }}"
          if [ "$JULIA_VERSION" = "nightly" ]; then
            wget https://julialangnightlies-s3.julialang.org/bin/linux/x64/julia-latest-linux-x86_64.tar.gz
            tar -xzf julia-latest-linux-x86_64.tar.gz
            JULIA_DIR=$(ls -d julia-* | head -1)
          else
            wget "https://julialang-s3.julialang.org/bin/linux/x64/${JULIA_VERSION}/julia-${JULIA_VERSION}-latest-linux-x86_64.tar.gz"
            tar -xzf "julia-${JULIA_VERSION}-latest-linux-x86_64.tar.gz"
            JULIA_DIR=$(ls -d julia-* | head -1)
          fi
          sudo mv "$JULIA_DIR" /opt/julia
          sudo ln -s /opt/julia/bin/julia /usr/local/bin/julia
          julia --version
      - name: Build package
        shell: wsl-bash {0}
        run: |
          julia --project=. -e 'using Pkg; Pkg.instantiate(); Pkg.build()'
      - name: Run tests
        shell: wsl-bash {0}
        run: |
          julia --project=. -e 'using Pkg; Pkg.test(coverage=true)'
      - name: Process coverage
        shell: wsl-bash {0}
        run: |
          julia --project=. -e 'using Pkg; Pkg.add("Coverage"); using Coverage; LCOV.writefile("lcov.info", Codecov.process_folder())'
      - uses: codecov/codecov-action@v5
        with:
          files: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
